{
	"nodes":[
		{"id":"4fe4e00b944a2588","x":-596,"y":-378,"width":604,"height":403,"type":"file","file":"Pasted image 20230203122451.png"},
		{"id":"70c1f31889c175a7","x":6,"y":-37,"width":250,"height":60,"type":"text","text":"Электрические сигналы, Хаб."},
		{"id":"ea9016322e8f8f70","x":8,"y":-87,"width":248,"height":50,"type":"text","text":"Свитчи. Мак адрес, ethernet. "},
		{"id":"692c289fd9c8be51","x":8,"y":-137,"width":248,"height":50,"type":"text","text":"Маршрутизаторы, IP-адрес, ICMP (Ping) "},
		{"id":"ff5eea3424d28a60","x":8,"y":-197,"width":250,"height":60,"type":"text","text":"TCP/UDP, "},
		{"id":"3e861bcc0555542d","x":8,"y":-247,"width":250,"height":50,"type":"text","text":"Разрыв сессий, кодеки кодирования сигнала"},
		{"id":"338411ec186ffbc9","x":8,"y":-346,"width":248,"height":50,"type":"text","text":"протоколы SSH, FTP, DNS, HTTPS. HTTP, SMTP"},
		{"id":"aa73e99ef91c404c","x":6,"y":-297,"width":250,"height":50,"type":"text","text":"JPEG, GIF"},
		{"id":"676bd70554f0340b","x":6,"y":-556,"width":712,"height":210,"type":"text","text":"DNS - Domain Name System - ипользуется для получения IP адреса по имени хоста. Например avito.ru\n<pre>\ndmitryslepov@MacBook-Air-C17FX76XQ6L4 ~ % dig A +short avito.ru\n146.158.52.24\n146.158.48.24\n146.158.54.24\n<pre>"},
		{"id":"3f7031e3a382df03","x":-596,"y":-679,"width":602,"height":301,"type":"text","text":"**Монолит**\nТрадиционная монолитная архитектура веб-приложения состоит из трех частей - базы данных, клиентской и серверной сторон. Это означает, что внутренняя и внешняя логика, как и другие фоновые задачи, генерируются в одной кодовой базе. Чтобы изменить или обновить компонент приложения, разработчики программного обеспечения должны переписать все приложение.  \n**Микросервисы**\nЧто касается микросервисов, этот подход позволяет разработчикам создавать веб-приложение из набора небольших сервисов. Разработчики создают и развертывают каждый компонент отдельно."},
		{"id":"722cdace5a16f272","x":-596,"y":25,"width":604,"height":60,"type":"text","text":"IP-адрес - Internet Protocol IPv4 32 бит, IPv6 128 бит. "},
		{"id":"05cb55d8c23a51ec","x":-596,"y":85,"width":604,"height":60,"type":"text","text":"NAT - Network Adress Translation - объединение устройств в локальной сети для выхода в интернет под одним внешним IP адресом"},
		{"id":"81769df348e09d5c","x":-294,"y":145,"width":300,"height":60,"type":"text","text":"UDP - User Datagram Protocol"},
		{"id":"93515355c60dbca1","x":-596,"y":145,"width":302,"height":60,"type":"text","text":"TCP - Transmission Control Protocol "},
		{"id":"06f541f7d6b91310","x":-596,"y":205,"width":602,"height":105,"type":"text","text":"HTTPS - шифрует все данные при передачи и  делает невозможным их воспроизвдение при перехвате. Шифрование осуществляется с помощью SSL и TLS. "},
		{"id":"ede0971549981e6e","x":-596,"y":310,"width":602,"height":197,"type":"text","text":"DOS - Denial of Service - большое количество запросов с одного IPадреса\nDDOS - Destributed - множетсво адресов и множество запросов\nPhishing - нелегитимные ссылки для получения личной информации\nBackdoor - удаленное управление ПК со стороны злоумышленика\nMiner - скрыто добывает крипту за счет ресурсов взломанного ПК\nRootKit - скрывает присутствие вредоносного ПО\nBruteForce - метод полного перебора пароля\n"},
		{"id":"1a9c9164ddb66c24","x":318,"y":-167,"width":399,"height":300,"type":"file","file":"Pasted image 20230203132752.png"},
		{"id":"5ce433c68a7c79eb","x":318,"y":-217,"width":258,"height":50,"type":"text","text":"Master-Slave"},
		{"id":"4cf6c24cabcc95f4","x":318,"y":-342,"width":654,"height":125,"type":"text","text":"Репликация - размещение нескольких копий БД на нескольких серверах.\nОбеспечение доступности, способ расположить данные ближе к конечному пользователю, чтобы оптимизировать время ответа. "},
		{"id":"a174856d5d04b537","x":8,"y":23,"width":250,"height":484,"type":"text","text":"HTTP запрос:\n- Cтартовая строка\n1. URL\n2. Метод запроса\n- Заголовок\n1. Информация о браузре\n2. Язык \n3. Сведения авторизации\n- Тело сообщение\n1. Данные которые мы передаем в запросе\n2. Ответ от сервера"},
		{"id":"bba2c7d3bc0a40d8","x":318,"y":210,"width":400,"height":289,"type":"file","file":"Pasted image 20230203132857.png"},
		{"id":"0b02e61af991e19c","x":318,"y":160,"width":258,"height":50,"type":"text","text":"Master-Master"},
		{"id":"7cede3d9db0a3a26","x":718,"y":-217,"width":424,"height":427,"type":"text","text":"-   _однонаправленная, асинхронная репликация_, при которой один сервер является источником, а остальные - репликами. При этом, реплика тоже может быть источником. Именно эту схему репликации и рассмотрим (`CHANGE MASTER TO...`)\n-   _полусинхронная (semisynchronous) репликация_ - commit транзакции будет подтвержден, только тогда, когда хотябы одна из реплик подтвердит, что событие получено и зафиксировано/логировано.\n-   _репликация с задержкой (delayed)_ - между данными источника и репликой будет задержка, заданная администратором. Обычно используется для тестирования или для защиты от ошибок на мастере."},
		{"id":"6b77264248f9e49b","x":722,"y":-556,"width":420,"height":210,"type":"text","text":"Load Balancer - распределение нагрузки.\nРаспределние запросов по нескольким серверам и обеспечение избыточности при отказе одной из нод.\nПо умолчанию в nginx используется модуль upstream. Он будет перенаправлять запросы по очереди на указаные в блоке upstream адреса серверов."},
		{"id":"36590c658a46e137","x":8,"y":-679,"width":709,"height":123,"type":"text","text":"Менеджеры очередей позволяет приложениям обмениваться сообщениями между собой.\nProducer - программа, которая отсылает\nBroker - очередь, буфер в памяти\nConsumer - получатель, программа, которая принимает сообщения из очереди.\n"}
	],
	"edges":[]
}